abiquo
absolute
abstraction
accelerate
access
accessible
according
account
acm
actions
add
added
addition
additional
additionally
address
addressed
addressing
adhering
adopted
adopting
advancements
agnostic
agree
ai
air
alexey
alibaba
allow
alternative
amazon
ambiguous
analyses
analysis
analyzing
anderson
anomaly
anti
antipattern
antipatterns
api
apis
app
appearance
appliance
application
applications
applies
apply
approach
appscale
april
architect
architectural
architecture
architectures
article
articles
arxiv
aske
aspects
associated
association
asynchronously
ataollah
atmos
attack
attacks
attribution
austin
authority
authors
available
aws
azure
b
baarzi
baas
backend
backward
barrett
batches
bcs
ben
benefits
benomar
berkeley
blurred
boundaries
bounded
box
break
breaking
brisals
broad
building
bulk
business
c
calls
capability
capable
carlee
categories
category
cause
centers
centralized
certain
chaining
chains
challenges
changed
changer
changes
chartered
chenggang
choreography
cite
citrix
classes
clear
clearer
closed
cloud
cloudbolt
cloudstack
clusters
cocaine
code
cohesion
cohesive
collected
combining
come
commitments
commons
communication
community
companion
compatibility
compensating
complex
complexity
component
components
computation
computing
concept
concepts
conduct
conference
confidence
configure
considering
contact
content
contents
context
contexts
continue
continues
contract
contrast
contribute
contributing
contributions
cookie
cost
cpu
create
creatio
creation
creative
cs
cui
current
curve
customer
customers
d
daniel
data
database
databases
datadog
date
david
de
debugging
default
define
defined
defining
definition
definitions
deft
deliver
denial
dependency
deploy
deployment
deprecation
described
description
design
desktop
detection
develop
developers
development
devsecops
dew
differences
different
difficult
difficulty
digital
digitalocean
directly
disclaimers
distinction
distinguish
distributed
documentation
doi
domain
donate
download
drive
driven
dropbox
e
ecosystem
ed
edge
edit
edited
edition
editors
eesti
effect
effective
effectiveness
elasticity
elements
elevator
eliminate
emc
emerging
emphasis
emphasize
emphasized
employed
encyclopedia
enda
endpoints
engine
engineering
engineers
english
enterprise
environment
environments
ephemeral
eric
errors
eucalyptus
event
events
everybody
evolve
evolved
exacerbated
excessive
excessively
execute
execution
exhibiting
explicit
export
faas
facilitate
faleiro
fall
fallacies
faster
fatahi
february
file
finer
flows
flywheel
focusing
following
form
formal
formation
forward
foundation
foundry
fowler
fragmented
frameworks
frank
frazer
free
fujitsu
function
functionless
functions
fundamentals
future
gain
game
gateways
ge
general
georgantas
george
glavin
gonzalez
google
grain
grained
granularity
greenbutton
greenqloud
group
groups
guarantees
guide
haidong
hard
hardware
having
helion
hellerstein
help
helps
heroku
hidden
hide
high
highlights
highly
history
hp
hpc
http
iam
ibm
icpp
ideal
identity
iec
ieee
iland
implement
implementation
importantly
imposed
impossible
improve
improving
includes
including
increase
increased
increasingly
individual
inefficiencies
information
infrastructure
inktank
insecure
instead
institute
instrumenting
integration
integrations
inter
interact
interconnected
interfaces
internal
international
internet
interpretations
introduced
invoke
involve
isbn
iso
issn
issue
italiano
item
jamieson
jason
jelastic
joe
johann
jonas
jose
joseph
journal
joyent
july
jump
june
katzer
kehoe
kelly
kept
kesidis
lambda
landing
languages
lark
latency
leading
learn
learning
level
leveraging
libguestfs
libvirt
license
like
limitations
limits
linear
link
links
linode
lock
locked
log
logged
logging
logic
long
looming
losing
lunacloud
machine
machinery
main
maint
maintain
maintaining
maintenance
makes
making
manage
managed
management
manager
manning
march
mark
martin
matches
maximize
maximum
media
memory
menu
merits
method
methods
metrics
microservice
microservices
microsoft
migration
mike
mindset
mindsphere
mirantis
misnomer
missing
mitigating
mobile
model
models
modern
modularization
mohammad
monitoring
monolith
multi
multiple
native
natively
nature
navigation
necessary
netlify
network
networking
new
nextcloud
nikolaos
nimbula
nimbus
non
noted
november
ny
observability
observed
occur
offering
office
ondemand
onedrive
openio
opennebula
openqrm
openshift
openstack
opentelemetry
operational
operations
opinionated
optimal
optimization
optional
oracle
orchestration
organization
organizations
organize
orionvm
os
outsystems
outweigh
overhead
overview
ovirt
owasp
owncloud
paas
page
pages
paradigms
parallel
parallelizable
particularly
parts
party
pattern
patterns
pay
pdf
performance
periodical
permanent
persist
personal
perspective
pfandzelter
pinball
pipeline
pitfalls
platespin
platform
platforms
policies
policy
portal
possible
power
powered
pp
practice
practices
predictable
predix
present
presents
preserve
prevail
prevention
principles
print
printable
privacy
private
proceedings
processes
processing
profit
programming
project
projects
promising
prone
proprietary
proton
provided
provider
providers
providing
provision
provisioned
public
published
pulled
pulling
push
pythonanywhere
qr
rackspace
radar
random
ray
rds
reach
read
reading
recent
redefining
reduce
reduced
references
referred
refers
regardless
registered
related
relationship
reporting
repositories
represents
require
requires
requiring
resource
resources
restrictions
resulting
retrieved
retrieving
richards
rightscale
rigid
risk
risks
roberts
role
root
run
runtime
safe
salesforce
sand
sap
scalability
scale
scalr
schleier
science
scientific
screekanti
seafile
search
security
sense
separate
september
server
serverless
servers
service
services
shahrad
sharealike
shared
sheen
shift
shifts
short
shortened
sidebar
simple
simplified
simultaneously
site
small
smith
socc
software
solutions
spaghetti
special
specific
spectrum
spin
splunk
springer
stability
stacks
stakeholders
standard
starting
statement
statistics
steadily
steeper
step
steps
storage
strategies
strict
strictly
structured
subsection
suitability
suomi
support
supporting
sustained
swiss
symposium
system
systems
t
table
talk
talking
team
teams
technically
technologies
technology
terms
testing
text
thorough
thoughtworks
threat
time
timeliness
times
tobias
toggle
tools
topic
tracing
track
trade
trademark
traditional
transactions
trigger
triggers
tumanov
types
typical
typically
uc
ucc
underlying
unique
upload
url
usa
usage
use
utc
utility
v
vague
value
variations
varied
vary
vcloud
vdc
vendor
vendors
vercel
version
versioning
versions
versus
viability
view
vikram
virtual
virtualization
virtualized
virtually
visibility
vol
vulnerable
wakame
wallet
wavemaker
way
web
wikidata
wikimedia
wikipedia
wong
work
workday
workflow
workflows
workload
workloads
workshops
workspace
wu
x
xinghui
yan
yard
year
york
zadara
zakaria
zhao
zoho
zones
